worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /tmp/nginx.pid;

load_module "/usr/lib/nginx/modules/ngx_http_js_module.so";
load_module "/usr/lib/nginx/modules/ngx_stream_js_module.so";

events {
    worker_connections  1024;
}

http {

    include /etc/nginx/conf.d/http.conf;

    # Note that this file is a template,
    # `envsubst` will be run to evaluate it

    # HTTP->HTTPS redirect
    server {
        listen 8080;
        server_name ${NGINX_HOST};
        return 301 https://${NGINX_HOST}$request_uri;
    }

    server {
        listen       8443 ssl http2;
        server_name  ${NGINX_HOST};

        ssl_certificate     /etc/nginx/ssl/marcs.crt;
        ssl_certificate_key /etc/nginx/ssl/marcs.key;

        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 24 4k;
        proxy_busy_buffers_size 8k;
        proxy_max_temp_file_size 2048m;
        proxy_temp_file_write_size 32k;
        proxy_read_timeout 120s;

        root /usr/share/nginx/html/react;
        index index.html index.htm;

        # https://gkedge.gitbooks.io/react-router-in-the-real/content/nginx.html

        location ~* \.(?:manifest|appcache|html?|xml|json)$ {
          expires -1;
          # access_log logs/static.log; # I don't usually include a static log
        }

        location ~* \.(?:css|js)$ {
          try_files $uri =404;
          expires 1y;
          access_log off;
          add_header Cache-Control "public";
        }

        location /_downloads/ {
            autoindex on;
            alias /usr/share/nginx/html/downloads/;
            sendfile on;
            sendfile_max_chunk 1m;

            expires 1m;
            add_header Cache-Control "public";
        }

        location /static/ {
            autoindex off;
            alias /usr/share/nginx/html/static/;
            sendfile on;
            sendfile_max_chunk 1m;

            expires 1y;
            add_header Cache-Control "public";
        }

        # Any route that doesn't have a file extension (e.g. /devices)
        location / {
            auth_basic "Restricted Access";
            auth_basic_user_file /etc/nginx/.htpasswd;

            try_files $uri $uri/ /index.html;
        }

        include /etc/nginx/conf.d/location_api.conf;
    }
}
